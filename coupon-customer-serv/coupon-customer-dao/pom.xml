<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>com.daichen</groupId>
        <artifactId>coupon-customer-serv</artifactId>
        <version>0.0.1-SNAPSHOT</version>
    </parent>

    <artifactId>coupon-customer-dao</artifactId>

    <properties>
        <java.version>1.8</java.version>
        <maven.compiler.source>8</maven.compiler.source>
        <maven.compiler.target>8</maven.compiler.target>
    </properties>

    <dependencies>
        <!-- DAO 层理论上不应该依赖 API 层，这里懒省事儿用了一套 POJO 从前到后传递 -->
        <!-- 正确的做法是 DAO 层定义自己的 DTO，然后上层用一个 converter 再转化成 API 里的类 -->
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>coupon-customer-api</artifactId>
            <version>${project.version}</version>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-validation</artifactId>
        </dependency>

        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
        </dependency>
    </dependencies>

</project>
